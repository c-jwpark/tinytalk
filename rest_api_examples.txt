-----------------------------------------
FUNCTION_ID	FR-01-01
API_ID	register_user
URL	/user
METHOD	POST
BODY
{
  "email": "test@test.com",
  "password": "test123#$",
  "address": "Seoul, Korea 10 st",
  "creditCard": {
    "number": "1111-2222-3333-4444",
    "expirationDate": "05/23",
    "validationCode": "777"
  }
}
RESPONSE
{
  "number": "1112222"
}
-----------------------------------------
FUNCTION_ID	FR-01-03_update_user
API_ID	update_user
URL	/user
HEADER	x-phone-number=1112222; x-password=test123#$
METHOD	PUT
BODY
{
  "email": "test@test.com",
  "password": "test123#$",
  "address": "Seoul, Korea 10 st",
  "creditCard": {
    "number": "1111-2222-3333-4444",
    "expirationDate": "05/23",
    "validationCode": "777"
  }
}
RESPONSE
200 OK
-----------------------------------------
FUNCTION_ID	FR-01-04_delete_user
API_ID	delete_user
URL	/user
HEADER	x-phone-number=1112222; x-password=test123#$
METHOD	DELETE
BODY
RESPONSE
200 OK
-----------------------------------------
FUNCTION_ID	FR-01-05_change_password
API_ID	change_password
URL	/user/password
HEADER	x-phone-number=1112222; x-password=test123#$
METHOD	PUT
BODY
{
  "oldPassword": "oldpass123#$",
  "newPassword": "newpass123#$"
}

RESPONSE
200 OK
-----------------------------------------
FUNCTION_ID	FR-05-09_change_ip
API_ID	change_ip
URL	/phoneip
HEADER	x-phone-number=1112222; x-password=test123#$
METHOD	PUT
BODY
{
  "ip": "10.0.0.3"
}
RESPONSE
200 OK
-----------------------------------------
FUNCTION_ID	FR-04-01_send_txtmsg
API_ID	txtmsg
URL	/txtmsg
HEADER	x-phone-number=1112222; x-password=test123#$
METHOD	POST
BODY
{
  "receivers": [
    "01011112222",
    "01033334444",
    "01055556666",
    "01077778888"
  ],
    "msg": "Hello Text Message"
}
RESPONSE
200 OK
-----------------------------------------
FUNCTION_ID	FR-06-01_cc_request
API_ID	cc_request
URL	/ccrequest
METHOD	POST
BODY
{
  "members": [
    "01011112222",
    "01033334444",
    "01055556666",
    "01077778888"
  ],
  "startDatetime": "2018-06-12T13:00:00Z",
  "endDatetime": "2018-06-12T13:00:00Z"
}
RESPONSE
200 OK
-----------------------------------------
FUNCTION_ID	FR-06-00_cc_dial
API_ID	cc_dial
URL	/ccdial/1112222
HEADER	x-phone-number=1112222; x-password=test123#$
METHOD	POST
RESPONSE
{
    "ip": "10.0.0.3"
}
-----------------------------------------
FUNCTION_ID	FR-06-00_cc_call_drop
API_ID	cc_call_drop
URL	/ccdial/1112222
HEADER	x-phone-number=1112222; x-password=test123#$
METHOD	DELETE
RESPONSE
200 OK
-----------------------------------------
FUNCTION_ID	FR-07-01_bill
API_ID	bill
URL	/bill?period=201806
HEADER	x-phone-number=1112222; x-password=test123#$
METHOD	GET
RESPONSE
{
    "incallTime": "1111",
    "outcallTime": "1111",
    "sendMsgBytes": "1000000",
    "receiveMsgBytes": "1000000",
    "cost": "20.12"
}
-----------------------------------------
FUNCTION_ID	FR-05-00_dial
API_ID	dial
URL	/dial
HEADER	x-phone-number=1112222; x-password=test123#$
METHOD	POST
BODY
{
    "receiver": "01033334444"
}

RESPONSE
200 OK
# receiver에게 MQTT로 알림
-----------------------------------------
FUNCTION_ID	FR-05-01_dial_response
API_ID	dial_response
# accept/busy/deny
URL	/dialresponse/accept
HEADER	x-phone-number=01033334444; x-password=test123#$
METHOD	POST
BODY
{
    "ip": "10.0.0.5"
}
RESPONSE
200 OK
# MQTT 로 발신자에게 전달 - accept일 경우 ip 전달
-----------------------------------------
FUNCTION_ID	FR-05-02_drop_call
API_ID	drop_call
URL	/dial
HEADER	x-phone-number=1112222; x-password=test123#$
METHOD	DELETE

# MQTT 로 통화 상대방에게 전달
-----------------------------------------
# deprecated --> 서버에 저장
#FUNCTION_ID	FR-07-01_call_history
#URL	/callhistory/01011112222?period=201806
#METHOD	GET
#RESPONSE
#[
#  {
#    "inout": "in",
#    "phonenumber": "01033334444",
#    "duration": 300,
#    "cost": 10.12
#  },
#    {
#    "inout": "in",
#    "phonenumber": "01055556666",
#    "duration": 200,
#    "cost": 7.12
#  }
#]
-----------------------------------------
# deprecated --> 서버에 저장
#FUNCTION_ID	FR-07-02_txtmsg_history
#URL	/txtmsghistory/01011112222?period=201806
#METHOD	GET
#BODY
#{
#  "period": "201806"
#}
#RESPONSE
#{
#  "sentbytes": 1000000,
#  "receivebytes": 1000000,
#  "cost": 10.12
#}
-----------------------------------------
#deprecated --> 전화 수신자의 ip는 전화 수락 mqtt에 저장하면 될 듯.
#FUNCTION_ID	FR-03-01_request_dest_ip
#URL	/phoneip/1112222
#METHOD	GET
#BODY
#RESPONSE
#{
#  "ip": "10.0.0.2"
#}
-----------------------------------------

### 전화 시작 ~ 종료
# sender --> dial api로 서버에 요청
# 서버 --> mqtt로  receiver에게 전달
# receiver --> dialresponse api로 accept/busy/deny 회신
# 서버 --> mqtt로 sender에게 dial 결과 회신. accept일 경우 회신 paylod에 receiverip 포함 --> 전화 시작 시점
# 종료 --> 전화를 끊는 쪽이 dial delete api로 서버에 알림 --> 전화 종료 시점
# 서버 --> mqtt로 전화 상대방에게 종료 알림

# 전화번호는 7자리

### Conference call 시나리오
# /ccrequest 요청 들어오면 phonenumber생성, 참석자에게 MQTT로 txtmsg 전송, 문자 내용에 cc number 포함
# cc 시간이 되면 참석자에게 MQTT로 txtmsg 전송
# cc number --> multicast ip 매핑 (redis TTL 사용)
# /ccdial/전화번호 POST --> ip 리턴 --> 전화 시작 시점
# /ccdial/전화번호 DELETE --> 통화 종료

### 기타
# password와 다른 사용자 정보는 따로 저장하는 것이 좋을 것 같다.
# 헤더에 id/pw 포함? --> 나중에

# 헤더 이름 x-
# json body key이름 camelCasing
# BODY / RESPONSE 로 네이밍
