/*
 * Design craft
 * This is a Design craft server.  
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * CCRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-06-02T19:54:34.446Z")
public class CCRequest   {
  @JsonProperty("members")
  private List<String> members = null;

  @JsonProperty("startdatetime")
  private String startdatetime = null;

  @JsonProperty("duration")
  private Integer duration = null;

  public CCRequest members(List<String> members) {
    this.members = members;
    return this;
  }

  public CCRequest addMembersItem(String membersItem) {
    if (this.members == null) {
      this.members = new ArrayList<String>();
    }
    this.members.add(membersItem);
    return this;
  }

  /**
   * Get members
   * @return members
   **/
  @JsonProperty("members")
  @ApiModelProperty(value = "")
  public List<String> getMembers() {
    return members;
  }

  public void setMembers(List<String> members) {
    this.members = members;
  }

  public CCRequest startdatetime(String startdatetime) {
    this.startdatetime = startdatetime;
    return this;
  }

  /**
   * Get startdatetime
   * @return startdatetime
   **/
  @JsonProperty("startdatetime")
  @ApiModelProperty(value = "")
  public String getStartdatetime() {
    return startdatetime;
  }

  public void setStartdatetime(String startdatetime) {
    this.startdatetime = startdatetime;
  }

  public CCRequest duration(Integer duration) {
    this.duration = duration;
    return this;
  }

  /**
   * time duration (in minutes)
   * @return duration
   **/
  @JsonProperty("duration")
  @ApiModelProperty(value = "time duration (in minutes)")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CCRequest ccRequest = (CCRequest) o;
    return Objects.equals(this.members, ccRequest.members) &&
        Objects.equals(this.startdatetime, ccRequest.startdatetime) &&
        Objects.equals(this.duration, ccRequest.duration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(members, startdatetime, duration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CCRequest {\n");
    
    sb.append("    members: ").append(toIndentedString(members)).append("\n");
    sb.append("    startdatetime: ").append(toIndentedString(startdatetime)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

