/*
 * Design craft
 * This is a Design craft server.  
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.model;

import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * TxtMsgRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-06-03T22:43:20.301Z")
public class TxtMsgRequest   {
  @JsonProperty("receivers")
  private List<String> receivers = null;
  
  @JsonProperty("sender")
  private String sender = null;

  @JsonProperty("message")
  private String message = null;
  
  @JsonProperty("timestamp")
  private long timestamp;

  public TxtMsgRequest receiver(List<String> receivers) {
    this.receivers = receivers;
    return this;
  }

  /**
   * Get receiver
   * @return receiver
   **/
  @JsonProperty("receivers")
  @ApiModelProperty(value = "")
  public List<String> getReceivers() {
    return receivers;
  }

  public void setReceivers(List<String> receivers) {
    this.receivers = receivers;
  }

  public TxtMsgRequest message(String msg) {
    this.message = msg;
    return this;
  }

  /**
   * Get msg
   * @return msg
   **/
  @JsonProperty("message")
  @ApiModelProperty(value = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String msg) {
    this.message = msg;
  }
  
  public TxtMsgRequest sender(String sender) {
	  this.sender = sender;
	  return this;
  }
  
  @JsonProperty("sender")
  @ApiModelProperty(value = "")
  public String getSender() {
    return sender;
  }
  
  public void setSender(String sender) {
	  this.sender = sender;
  }
  
  public TxtMsgRequest timestamp(long timestamp) {
	  this.timestamp = timestamp;
	  return this;
  }
  
  @JsonProperty("timestamp")
  @ApiModelProperty(value = "")
  public long getTimestamp() {
    return timestamp;
  }
  
  public void setTimestamp(long timestamp) {
	  this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TxtMsgRequest txtMsgRequest = (TxtMsgRequest) o;
    return Objects.equals(this.receivers, txtMsgRequest.receivers) &&
        Objects.equals(this.message, txtMsgRequest.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(receivers, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TxtMsgRequest {\n");
    
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    receivers: ").append(toIndentedString(receivers)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

